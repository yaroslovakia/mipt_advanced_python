1) Передаётся 6 аргументов: 1.py "arg" 7 --value 18 -a
2) Использовать библиотеку sys: print(sys.argv[0])
3) Создаем экземпляр класса ArgumentParser; добавляем в него информацию об ожидаемых параметрах с помощью метода add_argument (по одному вызову на каждый параметр); разбираем командную строку помощью метода parse_args, передавая ему полученные параметры командной строки (кроме нулевого элемента списка sys.argv). Обычно именованные параметры передают через один дефис и одну букву (-а), либо через два дефиса и полное имя (-all).
4) default - значение параметра по умолчанию (по умолчанию это None) 
const - постоянное значение, не принимаемое из командной строки. Его можно использовать с помощью параметра action, когда он принимает значение 'store_comst'
nargs - целочисленное значение(большее 0), переданное в nargs, означает количество параметров, которые мы обязаны передать. Если присвоить nargs значение '?', то параметр будет необязательным, если его не ввести, будет использовано дефолтное значение.
5) Декораторы — это "обёрточные функции", которые могут  изменить поведение функции, не изменяя её код.
6) Использование декоратора замедляет время работы функции
